<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/01/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>qingxunying_day1</title>
    <url>/2023/01/16/qingxunying-day1/</url>
    <content><![CDATA[<h3 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1 介绍"></a>1 介绍</h3><p>这是我参与「第五届青训营 」伴学笔记创作活动的第 1 天. 今天学习了go语言的基础语法，安装了goland，go 1.18. 学习了go moudle 管理依赖的方式， 并且上手了三个基础的小项目，以下对今天学到的进行总结，以便回顾使用</p>
<h3 id="2-基础"><a href="#2-基础" class="headerlink" title="2 基础"></a>2 基础</h3><h4 id="2-1-go的优势有以下几点"><a href="#2-1-go的优势有以下几点" class="headerlink" title="2.1 go的优势有以下几点"></a>2.1 go的优势有以下几点</h4><ul>
<li>高性能、高并发</li>
<li>丰富的标注库</li>
<li>完善的工具链</li>
<li>静态链接</li>
<li>快速编译</li>
<li>跨平台</li>
<li>垃圾回收</li>
</ul>
<h4 id="2-2-变量，go语言中变量是强类型"><a href="#2-2-变量，go语言中变量是强类型" class="headerlink" title="2.2 变量，go语言中变量是强类型"></a>2.2 变量，go语言中变量是<strong>强类型</strong></h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">a := <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> a <span class="type">int</span> = <span class="number">1</span></span><br><span class="line">a, b := <span class="number">1</span>, <span class="number">2</span></span><br></pre></td></tr></table></figure>
<h4 id="2-3-条件语句-if"><a href="#2-3-条件语句-if" class="headerlink" title="2.3 条件语句 if"></a>2.3 条件语句 if</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> x, err := fmt.Scanf(<span class="string">&quot;%d&quot;</span>, &amp;a); err == <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(x, err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-4-循环语句-for"><a href="#2-4-循环语句-for" class="headerlink" title="2.4 循环语句 for"></a>2.4 循环语句 for</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>&#123;   <span class="comment">//无限循环</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> x, y := <span class="number">1</span>, <span class="number">1</span>; y &lt;= <span class="number">20</span>; x, y = y, x+y &#123;</span><br><span class="line">   fmt.Println(y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-5-数组（定长）和切片（不定长）"><a href="#2-5-数组（定长）和切片（不定长）" class="headerlink" title="2.5 数组（定长）和切片（不定长）"></a>2.5 数组（定长）和切片（不定长）</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">a [<span class="number">3</span>]<span class="type">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;  <span class="comment">//数组</span></span><br><span class="line"><span class="keyword">var</span> b [<span class="number">3</span>][<span class="number">5</span>]<span class="type">int</span></span><br><span class="line"></span><br><span class="line">a := <span class="built_in">make</span>([]<span class="type">string</span>, <span class="number">3</span>) <span class="comment">//切片</span></span><br><span class="line">a = <span class="built_in">append</span>(a, <span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"><span class="built_in">copy</span>(b, a)</span><br></pre></td></tr></table></figure>
<h4 id="2-6-map"><a href="#2-6-map" class="headerlink" title="2.6 map"></a>2.6 map</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line">n := <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;<span class="string">&quot;one&quot;</span>:<span class="number">1</span>,<span class="string">&quot;two&quot;</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">delete</span>(n, <span class="string">&quot;one&quot;</span>)</span><br></pre></td></tr></table></figure>
<h4 id="2-7-range"><a href="#2-7-range" class="headerlink" title="2.7 range"></a>2.7 range</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i, num in <span class="keyword">range</span> a&#123;  <span class="comment">//a是数组，i，num分别为索引和值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> key,value in <span class="keyword">range</span> <span class="keyword">map</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-8-struct"><a href="#2-8-struct" class="headerlink" title="2.8 struct"></a>2.8 struct</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> user <span class="keyword">struct</span>&#123;</span><br><span class="line">    user <span class="type">string</span></span><br><span class="line">    pass <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line">user1 := user&#123;<span class="string">&quot;qiqzy&quot;</span>,<span class="string">&quot;qiqzy@123&quot;</span>&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-9-function-和-struct-function"><a href="#2-9-function-和-struct-function" class="headerlink" title="2.9 function 和 struct function"></a>2.9 function 和 struct function</h4><p>function 中传入参数可以以指针形式，可以改值， struct function 也可以在 函数名前定义指针结构体参数，用于修改结构体参数</p>
<h4 id="2-10-fmt-输出"><a href="#2-10-fmt-输出" class="headerlink" title="2.10 fmt 输出"></a>2.10 fmt 输出</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">fmt.Printf(<span class="string">&quot;p=%v\n&quot;</span>, p)</span><br><span class="line">fmt.Printf(<span class="string">&quot;x=%v\n&quot;</span>, <span class="number">100</span>)</span><br><span class="line">fmt.Printf(<span class="string">&quot;p=%+v\n&quot;</span>, p)</span><br><span class="line">fmt.Printf(<span class="string">&quot;p=%#v\n&quot;</span>, p)</span><br></pre></td></tr></table></figure>
<h4 id="2-11-os"><a href="#2-11-os" class="headerlink" title="2.11 os"></a>2.11 os</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">os.Args</span><br><span class="line">os.Getenv(<span class="string">&quot;PATH&quot;</span>)</span><br><span class="line">exec.Command(<span class="string">&quot;ipconfig&quot;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="3-三个小项目"><a href="#3-三个小项目" class="headerlink" title="3 三个小项目"></a>3 三个小项目</h3><h4 id="3-1-猜数字游戏"><a href="#3-1-猜数字游戏" class="headerlink" title="3.1 猜数字游戏"></a>3.1 猜数字游戏</h4><p>首先通过rand随机生成一个数， 注意设置随机数种子。然后用fmt.print输出各种提示，开始游戏，提示用户输入猜测数字，读取数字，判断大小并返回反馈，直到最后成功</p>
<h4 id="3-2-翻译工具（爬取彩云翻译的结果）"><a href="#3-2-翻译工具（爬取彩云翻译的结果）" class="headerlink" title="3.2 翻译工具（爬取彩云翻译的结果）"></a>3.2 翻译工具（爬取彩云翻译的结果）</h4><p>代码生成可以很大程度降低工作量</p>
<ul>
<li>通过开发者工具拿到curl链接，然后到<a href="https://curlconverter.com/go/">https://curlconverter.com/go/</a> 生成代码</li>
<li>爬取的结果json很复杂，可以到<a href="https://oktools.net/json2go">https://oktools.net/json2go</a>拿到结构体，方便进行反序列化</li>
</ul>
<h4 id="3-3-socks5-代理"><a href="#3-3-socks5-代理" class="headerlink" title="3.3 socks5 代理"></a>3.3 socks5 代理</h4><p>curl demo:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl --socks5 127.0.0.1:7890 -v http://www.google.com</span><br></pre></td></tr></table></figure>
<p>需要了解socks5 协议的原理，以及发包的结构。认证阶段如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//接收</span><br><span class="line"> +----+----------+----------+</span><br><span class="line"> |VER | NMETHODS | METHODS  |</span><br><span class="line"> +----+----------+----------+</span><br><span class="line"> | 1  |    1     | 1 to 255 |</span><br><span class="line"> +----+----------+----------+</span><br><span class="line"> VER: 协议版本，socks5为0x05</span><br><span class="line"> NMETHODS: 支持认证的方法数量</span><br><span class="line"> METHODS: 对应NMETHODS，NMETHODS的值为多少，METHODS就有多少个字节。RFC预定义了一些值的含义，内容如下:</span><br><span class="line"> X’00’ NO AUTHENTICATION REQUIRED</span><br><span class="line"> X’02’ USERNAME/PASSWORD</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> //发送</span><br><span class="line"> +----+--------+</span><br><span class="line"> |VER | METHOD |</span><br><span class="line"> +----+--------+</span><br><span class="line"> | 1  |   1    |</span><br><span class="line"> +----+--------+</span><br></pre></td></tr></table></figure>
<p>连接阶段如下，连接完成之后启用net.Dial进行tcp连接，交互数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+----+-----+-------+------+----------+----------+</span><br><span class="line">|VER | CMD |  RSV  | ATYP | DST.ADDR | DST.PORT |</span><br><span class="line">+----+-----+-------+------+----------+----------+</span><br><span class="line">| 1  |  1  | X&#x27;00&#x27; |  1   | Variable |    2     |</span><br><span class="line">+----+-----+-------+------+----------+----------+</span><br><span class="line">VER 版本号，socks5的值为0x05</span><br><span class="line">CMD 0x01表示CONNECT请求</span><br><span class="line">RSV 保留字段，值为0x00</span><br><span class="line">ATYP 目标地址类型，DST.ADDR的数据对应这个字段的类型。</span><br><span class="line">  0x01表示IPv4地址，DST.ADDR为4个字节</span><br><span class="line">  0x03表示域名，DST.ADDR是一个可变长度的域名</span><br><span class="line">DST.ADDR 一个可变长度的值</span><br><span class="line">DST.PORT 目标端口，固定2个字节</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
